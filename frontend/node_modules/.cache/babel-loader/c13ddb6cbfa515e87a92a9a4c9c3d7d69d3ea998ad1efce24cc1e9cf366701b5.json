{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jjerm\\\\Desktop\\\\Airbnb Project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Header from './components/Header';\nimport LoginPage from './pages/LoginPage';\nimport DashboardPage from './pages/DashboardPage';\nimport CreateListingPage from './pages/CreateListingPage';\nimport UpdateListingPage from './pages/UpdateListingPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = React.useState(null);\n  React.useEffect(() => {\n    // Check if user is logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Decode token and set user (this part requires decoding the JWT, which you can handle in your own way)\n      const decodedUser = {}; // Replace with actual decoded user data\n      setUser(decodedUser);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(DashboardPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create-listing\",\n        element: /*#__PURE__*/_jsxDEV(CreateListingPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/update-listing/:id\",\n        element: /*#__PURE__*/_jsxDEV(UpdateListingPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","Header","LoginPage","DashboardPage","CreateListingPage","UpdateListingPage","jsxDEV","_jsxDEV","App","_s","user","setUser","useState","useEffect","token","localStorage","getItem","decodedUser","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/jjerm/Desktop/Airbnb Project/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Header from './components/Header';\nimport LoginPage from './pages/LoginPage';\nimport DashboardPage from './pages/DashboardPage';\nimport CreateListingPage from './pages/CreateListingPage';\nimport UpdateListingPage from './pages/UpdateListingPage';\n\nfunction App() {\n    const [user, setUser] = React.useState(null);\n\n    React.useEffect(() => {\n        // Check if user is logged in\n        const token = localStorage.getItem('token');\n        if (token) {\n            // Decode token and set user (this part requires decoding the JWT, which you can handle in your own way)\n            const decodedUser = {}; // Replace with actual decoded user data\n            setUser(decodedUser);\n        }\n    }, []);\n\n    return (\n        <Router>\n            <Header user={user} />\n            <Routes>\n                <Route path=\"/login\" element={<LoginPage />} />\n                <Route path=\"/dashboard\" element={<DashboardPage />} />\n                <Route path=\"/create-listing\" element={<CreateListingPage />} />\n                <Route path=\"/update-listing/:id\" element={<UpdateListingPage />} />\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,iBAAiB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,KAAK,CAACgB,QAAQ,CAAC,IAAI,CAAC;EAE5ChB,KAAK,CAACiB,SAAS,CAAC,MAAM;IAClB;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACP;MACA,MAAMG,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;MACxBN,OAAO,CAACM,WAAW,CAAC;IACxB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA,CAACT,MAAM;IAAAoB,QAAA,gBACHX,OAAA,CAACN,MAAM;MAACS,IAAI,EAAEA;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtBf,OAAA,CAACP,MAAM;MAAAkB,QAAA,gBACHX,OAAA,CAACR,KAAK;QAACwB,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEjB,OAAA,CAACL,SAAS;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/Cf,OAAA,CAACR,KAAK;QAACwB,IAAI,EAAC,YAAY;QAACC,OAAO,eAAEjB,OAAA,CAACJ,aAAa;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDf,OAAA,CAACR,KAAK;QAACwB,IAAI,EAAC,iBAAiB;QAACC,OAAO,eAAEjB,OAAA,CAACH,iBAAiB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChEf,OAAA,CAACR,KAAK;QAACwB,IAAI,EAAC,qBAAqB;QAACC,OAAO,eAAEjB,OAAA,CAACF,iBAAiB;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB;AAACb,EAAA,CAxBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}