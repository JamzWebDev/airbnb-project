{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import '../components/ViewListings.css';\n\n// const ViewListings = () => {\n//   const [accommodations, setAccommodations] = useState([]);\n//   const [listings, setListings] = useState([]);\n//   const [isEditing, setIsEditing] = useState(null);\n//   const [editForm, setEditForm] = useState({\n//     title: '',\n//     location: '',\n//     description: '',\n//     rooms: '',\n//     baths: '',\n//     amenities: [],\n//     price: '',\n//   });\n\n//   useEffect(() => {\n//     const fetchListings = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await axios.get('http://localhost:5000/api/accommodations', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setListings(response.data);\n//       } catch (error) {\n//         console.error('Failed to fetch listings:', error.response?.data || error.message);\n//       }\n//     };\n//     axios\n//       .get(\"http://localhost:5000/api/accommodations\")\n//       .then((response) => setAccommodations(response.data))\n//       .catch((error) => console.error(\"Error fetching accommodations:\", error));\n\n//     fetchListings();\n//   }, []);\n\n//   const handleEditClick = (listing) => {\n//     setIsEditing(listing._id);\n//     setEditForm({\n//       title: listing.title,\n//       location: listing.location,\n//       description: listing.description,\n//       rooms: listing.rooms,\n//       baths: listing.baths,\n//       amenities: listing.amenities,\n//       price: listing.price,\n//     });\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditForm((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleAddAmenity = () => {\n//     setEditForm((prev) => ({\n//       ...prev,\n//       amenities: [...prev.amenities, ''],\n//     }));\n//   };\n\n//   const handleAmenityChange = (index, value) => {\n//     const updatedAmenities = [...editForm.amenities];\n//     updatedAmenities[index] = value;\n//     setEditForm((prev) => ({ ...prev, amenities: updatedAmenities }));\n//   };\n\n//   const handleUpdate = async (listingId) => {\n//     try {\n//       const response = await axios.put(`/api/accommodations/${listingId}`, editForm);\n//       const updatedListing = response.data;\n\n//       setListings((prevListings) =>\n//         prevListings.map((listing) =>\n//           listing._id === listingId ? updatedListing : listing\n//         )\n//       );\n\n//       setIsEditing(null);\n//       setEditForm({\n//         title: '',\n//         location: '',\n//         description: '',\n//         rooms: '',\n//         baths: '',\n//         amenities: [],\n//         price: '',\n//       });\n//     } catch (error) {\n//       console.error('Failed to update listing:', error);\n//     }\n//   };\n\n//   const handleDelete = async (listingId) => {\n//     try {\n//       await axios.delete(`/api/accommodations/${listingId}`);\n//       setListings((prevListings) => prevListings.filter((listing) => listing._id !== listingId));\n//     } catch (error) {\n//       console.error('Failed to delete listing:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"listing-view\">\n//       <h3>My Hotel List</h3>\n//       {Array.isArray(listings) && listings.length > 0 ? (\n//         listings.map((listing) => (\n//           <div key={listing._id} className=\"listing-item\">\n//             <img src={listing.mainImage} alt=\"Hotel\" />\n//             <div>\n//               <h4>{listing.title}</h4>\n//               <p>{listing.rooms} rooms • {listing.baths} baths</p>\n//               <p>\n//                 {listing.amenities.join(' • ')}\n//                 <span> • 5.0 ⭐</span>\n//               </p>\n//               <div className=\"price\">${listing.price} <span>/night</span></div>\n//               {isEditing === listing._id ? (\n//                 <div className=\"edit-form\">\n//                   <input\n//                     type=\"text\"\n//                     name=\"title\"\n//                     value={editForm.title}\n//                     onChange={handleEditChange}\n//                     placeholder=\"Title\"\n//                   />\n//                   <input\n//                     type=\"text\"\n//                     name=\"location\"\n//                     value={editForm.location}\n//                     onChange={handleEditChange}\n//                     placeholder=\"Location\"\n//                   />\n//                   <textarea\n//                     name=\"description\"\n//                     value={editForm.description}\n//                     onChange={handleEditChange}\n//                     placeholder=\"Description\"\n//                   />\n//                   <input\n//                     type=\"number\"\n//                     name=\"rooms\"\n//                     value={editForm.rooms}\n//                     onChange={handleEditChange}\n//                     placeholder=\"Rooms\"\n//                   />\n//                   <input\n//                     type=\"number\"\n//                     name=\"baths\"\n//                     value={editForm.baths}\n//                     onChange={handleEditChange}\n//                     placeholder=\"Baths\"\n//                   />\n//                   <input\n//                     type=\"number\"\n//                     name=\"price\"\n//                     value={editForm.price}\n//                     onChange={handleEditChange}\n//                     placeholder=\"Price per Night\"\n//                   />\n\n//                   <div className=\"amenities\">\n//                     <label>Amenities</label>\n//                     {editForm.amenities.map((amenity, index) => (\n//                       <input\n//                         key={index}\n//                         type=\"text\"\n//                         value={amenity}\n//                         onChange={(e) => handleAmenityChange(index, e.target.value)}\n//                         placeholder={`Amenity ${index + 1}`}\n//                       />\n//                     ))}\n//                     <button type=\"button\" onClick={handleAddAmenity}>Add Amenity</button>\n//                   </div>\n\n//                   <button onClick={() => handleUpdate(listing._id)} className=\"save-btn\">\n//                     Save\n//                   </button>\n//                   <button onClick={() => setIsEditing(null)} className=\"cancel-btn\">\n//                     Cancel\n//                   </button>\n//                 </div>\n//               ) : (\n//                 <>\n//                   <button onClick={() => handleEditClick(listing)} className=\"update-btn\">\n//                     Edit\n//                   </button>\n//                   <button onClick={() => handleDelete(listing._id)} className=\"delete-btn\">\n//                     Delete\n//                   </button>\n//                 </>\n//               )}\n//             </div>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No listings available.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ViewListings;","map":{"version":3,"names":[],"sources":["C:/Users/jjerm/Desktop/Airbnb Project/frontend/src/components/ViewListings.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import '../components/ViewListings.css';\r\n\r\n// const ViewListings = () => {\r\n//   const [accommodations, setAccommodations] = useState([]);\r\n//   const [listings, setListings] = useState([]);\r\n//   const [isEditing, setIsEditing] = useState(null);\r\n//   const [editForm, setEditForm] = useState({\r\n//     title: '',\r\n//     location: '',\r\n//     description: '',\r\n//     rooms: '',\r\n//     baths: '',\r\n//     amenities: [],\r\n//     price: '',\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const fetchListings = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const response = await axios.get('http://localhost:5000/api/accommodations', {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n//         setListings(response.data);\r\n//       } catch (error) {\r\n//         console.error('Failed to fetch listings:', error.response?.data || error.message);\r\n//       }\r\n//     };\r\n//     axios\r\n//       .get(\"http://localhost:5000/api/accommodations\")\r\n//       .then((response) => setAccommodations(response.data))\r\n//       .catch((error) => console.error(\"Error fetching accommodations:\", error));\r\n\r\n//     fetchListings();\r\n//   }, []);\r\n\r\n//   const handleEditClick = (listing) => {\r\n//     setIsEditing(listing._id);\r\n//     setEditForm({\r\n//       title: listing.title,\r\n//       location: listing.location,\r\n//       description: listing.description,\r\n//       rooms: listing.rooms,\r\n//       baths: listing.baths,\r\n//       amenities: listing.amenities,\r\n//       price: listing.price,\r\n//     });\r\n//   };\r\n\r\n//   const handleEditChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setEditForm((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleAddAmenity = () => {\r\n//     setEditForm((prev) => ({\r\n//       ...prev,\r\n//       amenities: [...prev.amenities, ''],\r\n//     }));\r\n//   };\r\n\r\n//   const handleAmenityChange = (index, value) => {\r\n//     const updatedAmenities = [...editForm.amenities];\r\n//     updatedAmenities[index] = value;\r\n//     setEditForm((prev) => ({ ...prev, amenities: updatedAmenities }));\r\n//   };\r\n\r\n//   const handleUpdate = async (listingId) => {\r\n//     try {\r\n//       const response = await axios.put(`/api/accommodations/${listingId}`, editForm);\r\n//       const updatedListing = response.data;\r\n\r\n//       setListings((prevListings) =>\r\n//         prevListings.map((listing) =>\r\n//           listing._id === listingId ? updatedListing : listing\r\n//         )\r\n//       );\r\n\r\n//       setIsEditing(null);\r\n//       setEditForm({\r\n//         title: '',\r\n//         location: '',\r\n//         description: '',\r\n//         rooms: '',\r\n//         baths: '',\r\n//         amenities: [],\r\n//         price: '',\r\n//       });\r\n//     } catch (error) {\r\n//       console.error('Failed to update listing:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (listingId) => {\r\n//     try {\r\n//       await axios.delete(`/api/accommodations/${listingId}`);\r\n//       setListings((prevListings) => prevListings.filter((listing) => listing._id !== listingId));\r\n//     } catch (error) {\r\n//       console.error('Failed to delete listing:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"listing-view\">\r\n//       <h3>My Hotel List</h3>\r\n//       {Array.isArray(listings) && listings.length > 0 ? (\r\n//         listings.map((listing) => (\r\n//           <div key={listing._id} className=\"listing-item\">\r\n//             <img src={listing.mainImage} alt=\"Hotel\" />\r\n//             <div>\r\n//               <h4>{listing.title}</h4>\r\n//               <p>{listing.rooms} rooms • {listing.baths} baths</p>\r\n//               <p>\r\n//                 {listing.amenities.join(' • ')}\r\n//                 <span> • 5.0 ⭐</span>\r\n//               </p>\r\n//               <div className=\"price\">${listing.price} <span>/night</span></div>\r\n//               {isEditing === listing._id ? (\r\n//                 <div className=\"edit-form\">\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     name=\"title\"\r\n//                     value={editForm.title}\r\n//                     onChange={handleEditChange}\r\n//                     placeholder=\"Title\"\r\n//                   />\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     name=\"location\"\r\n//                     value={editForm.location}\r\n//                     onChange={handleEditChange}\r\n//                     placeholder=\"Location\"\r\n//                   />\r\n//                   <textarea\r\n//                     name=\"description\"\r\n//                     value={editForm.description}\r\n//                     onChange={handleEditChange}\r\n//                     placeholder=\"Description\"\r\n//                   />\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     name=\"rooms\"\r\n//                     value={editForm.rooms}\r\n//                     onChange={handleEditChange}\r\n//                     placeholder=\"Rooms\"\r\n//                   />\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     name=\"baths\"\r\n//                     value={editForm.baths}\r\n//                     onChange={handleEditChange}\r\n//                     placeholder=\"Baths\"\r\n//                   />\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     name=\"price\"\r\n//                     value={editForm.price}\r\n//                     onChange={handleEditChange}\r\n//                     placeholder=\"Price per Night\"\r\n//                   />\r\n\r\n//                   <div className=\"amenities\">\r\n//                     <label>Amenities</label>\r\n//                     {editForm.amenities.map((amenity, index) => (\r\n//                       <input\r\n//                         key={index}\r\n//                         type=\"text\"\r\n//                         value={amenity}\r\n//                         onChange={(e) => handleAmenityChange(index, e.target.value)}\r\n//                         placeholder={`Amenity ${index + 1}`}\r\n//                       />\r\n//                     ))}\r\n//                     <button type=\"button\" onClick={handleAddAmenity}>Add Amenity</button>\r\n//                   </div>\r\n\r\n//                   <button onClick={() => handleUpdate(listing._id)} className=\"save-btn\">\r\n//                     Save\r\n//                   </button>\r\n//                   <button onClick={() => setIsEditing(null)} className=\"cancel-btn\">\r\n//                     Cancel\r\n//                   </button>\r\n//                 </div>\r\n//               ) : (\r\n//                 <>\r\n//                   <button onClick={() => handleEditClick(listing)} className=\"update-btn\">\r\n//                     Edit\r\n//                   </button>\r\n//                   <button onClick={() => handleDelete(listing._id)} className=\"delete-btn\">\r\n//                     Delete\r\n//                   </button>\r\n//                 </>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         ))\r\n//       ) : (\r\n//         <p>No listings available.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ViewListings;\r\n\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}